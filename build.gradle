buildscript {
  if ("$gradle.gradleVersion" != "7.2") {
    throw new GradleException("Gradle version 7.2 is required (received $gradle.gradleVersion)")
  }

  ext.kotlin_version = "1.5.30"

  repositories {
    mavenCentral()
    google()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:7.0.3'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "digital.wup:android-maven-publish:3.6.3"
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2"
    classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
    classpath "biz.aQute.bnd:biz.aQute.bnd.gradle:6.0.0"
  }
}

plugins {
  id "ru.vyarus.animalsniffer" version "1.5.0"
}

ext {
  androidBuildToolsVersion = "30.0.2"
  androidCompileSDKVersion = 31
  androidMinimumSDKVersion = 21
  androidTargetSDKVersion = 31
}

allprojects {
  group = project.ext["GROUP"]
  version = project.ext["VERSION_NAME"]
}

subprojects { project ->

  switch (POM_PACKAGING) {
    case "jar":
      logger.info("Configuring ${project} (${POM_PACKAGING}) as jar project")

      apply plugin: "java"
      apply plugin: "java-library"
      apply plugin: "kotlin"

      /*
       * Apply the Animal Sniffer plugin to check that code is Android compatible.
       */

      apply plugin: "ru.vyarus.animalsniffer"

      dependencies {
        signature "org.codehaus.mojo.signature:java16:1.1@signature"
        signature "net.sf.androidscents.signature:android-api-level-14:4.0_r4@signature"
      }

      /*
       * Build an OSGi bundle.
       */

      apply plugin: "biz.aQute.bnd.builder"

      jar {
        bnd """
Automatic-Module-Name: ${POM_AUTOMATIC_MODULE_NAME}

-removeheaders: Bnd-LastModified, Tool, Private-Package
"""
      }
      break

    case "apk":
      logger.info("Configuring ${project} (${POM_PACKAGING}) as Android application project")

      apply plugin: "com.android.application"
      apply plugin: "kotlin-android"

      android {
        compileSdkVersion androidCompileSDKVersion
        buildToolsVersion androidBuildToolsVersion

        defaultConfig {
          minSdkVersion androidMinimumSDKVersion
          targetSdkVersion androidTargetSDKVersion
          testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_1_8
          targetCompatibility JavaVersion.VERSION_1_8
        }
        testOptions {
          execution "ANDROIDX_TEST_ORCHESTRATOR"
          animationsDisabled = true
        }
      }
      break

    case "aar":
      logger.info("Configuring ${project} (${POM_PACKAGING}) as Android library project")

      apply plugin: "com.android.library"
      apply plugin: "kotlin-android"

      android {
        compileSdkVersion androidCompileSDKVersion
        buildToolsVersion androidBuildToolsVersion

        defaultConfig {
          minSdkVersion androidMinimumSDKVersion
          targetSdkVersion androidTargetSDKVersion
          testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
        compileOptions {
          sourceCompatibility JavaVersion.VERSION_1_8
          targetCompatibility JavaVersion.VERSION_1_8
        }
        testOptions {
          execution "ANDROIDX_TEST_ORCHESTRATOR"
          animationsDisabled = true
        }
      }
      break

    default:
      throw new IllegalStateException(
        "Unrecognized packaging type ${POM_PACKAGING} for ${project}")
  }

  task javadocsJar(type: Jar) {
    classifier = "javadoc"
  }

  task sourcesJar(type: Jar) {
    classifier = "sources"
    from "src/main/java", "src/main/resources"
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    jcenter()
    google()

    if (project.hasProperty("org.librarysimplified.audiobook.demo.with_findaway")) {
      if (project.property("org.librarysimplified.audiobook.demo.with_findaway") == "true") {
        maven {
          url "http://maven.findawayworld.com/artifactory/libs-release/"
          allowInsecureProtocol true
        }
      }
    }
  }
}

